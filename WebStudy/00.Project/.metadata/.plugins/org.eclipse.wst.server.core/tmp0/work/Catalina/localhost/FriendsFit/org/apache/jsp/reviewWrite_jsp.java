/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-07 01:35:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reviewWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>FriendsFit</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/slideStyle.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("$(document).ready(function() {\n");
      out.write("    $('#searchInput').on('keyup', function() {\n");
      out.write("        var query = $(this).val();\n");
      out.write("        if (query.length > 2) { // 검색어가 3자 이상일 때만 요청\n");
      out.write("            $.ajax({\n");
      out.write("                url: 'searchServlet',\n");
      out.write("                method: 'GET',\n");
      out.write("                data: {\n");
      out.write("                    query: query\n");
      out.write("                },\n");
      out.write("                contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n");
      out.write("                success: function(dataStr) {\n");
      out.write("                    // 문자열을 파싱하여 배열로 변환\n");
      out.write("                    var data = dataStr.replace(/^\\[|\\]$/g, '').split(', ').map(item => item.trim());\n");
      out.write("\n");
      out.write("                    var formattedData = '';\n");
      out.write("                    for (var i = 0; i < data.length; i++) {\n");
      out.write("                        formattedData += '<a href=\"#\" class=\"search-item\" data-value=\"' + data[i].split(' ')[0] + '\">' + data[i] + '</a><br class=\"break-line\">';\n");
      out.write("                    }\n");
      out.write("                    $('#results').html(formattedData);\n");
      out.write("                    \n");
      out.write("                    // 검색 결과에 클릭 이벤트 추가\n");
      out.write("                    $('#results').find('.search-item').on('click', function(event) {\n");
      out.write("                        event.preventDefault(); // 기본 링크 동작 방지\n");
      out.write("                        \n");
      out.write("                        var selectedValue = $(this).attr('data-value'); // 번호만 가져옴\n");
      out.write("\n");
      out.write("                        // 모든 항목과 줄바꿈 태그를 숨김\n");
      out.write("                        $('.search-item, .break-line').hide();\n");
      out.write("                        \n");
      out.write("                        // 선택된 항목만 보여줌\n");
      out.write("                        $(this).show();\n");
      out.write("                        \n");
      out.write("                        // 선택된 값으로 input 태그 추가\n");
      out.write("                        var inputElement = $('<input>')\n");
      out.write("                            .attr('name', 'facilityNum')\n");
      out.write("                            .attr('value', selectedValue)\n");
      out.write("                            .attr('type', 'text')\n");
      out.write("                            .attr('style', 'display: none;')\n");
      out.write("                            .insertAfter($(this)); // 선택된 항목 바로 뒤에 추가\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div id=\"whole\">\n");
      out.write("		<div id=\"mainframe\">\n");
      out.write("			<div id=\"main-content\">\n");
      out.write("				<div id=\"header\">\n");
      out.write("					<div class=\"top-header\">\n");
      out.write("						<img src=\"img/FFlogo.png\" alt=\"friendsfit-logo\"\n");
      out.write("							style=\"cursor: pointer\" onclick=\"location.href='index.jsp'\">\n");
      out.write("						<!-- <h1>Our fit</h1> -->\n");
      out.write("					</div>\n");
      out.write("					<div class=\"button-group\">\n");
      out.write("						<form action=\"login.html\">\n");
      out.write("							<button type=\"submit\" class=\"sign-in-button\"\n");
      out.write("								formaction=\"login.jsp\">로그인 / 가입</button>\n");
      out.write("						</form>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div id=\"main\" style=\"background-color: white;\">\n");
      out.write("\n");
      out.write("					<div>리뷰 글쓰기 페이지</div>\n");
      out.write("					<div>\n");
      out.write("\n");
      out.write("						<form action=\"reviewAction\" method=\"post\"\n");
      out.write("							enctype=\"multipart/form-data\">\n");
      out.write("\n");
      out.write("\n");
      out.write("							<div>\n");
      out.write("								<input type=\"text\" id=\"searchInput\" placeholder=\"시설 검색...\">\n");
      out.write("								<div id=\"results\"></div>\n");
      out.write("							</div>\n");
      out.write("							<div>\n");
      out.write("\n");
      out.write("								<input type=\"text\" name=\"reviewTitle\">\n");
      out.write("\n");
      out.write("							</div>\n");
      out.write("							<div>\n");
      out.write("\n");
      out.write("								<input type=\"file\" name=\"file\"> <input type=\"text\"\n");
      out.write("									name=\"reviewGrade\">\n");
      out.write("\n");
      out.write("							</div>\n");
      out.write("							<div>\n");
      out.write("\n");
      out.write("								<textarea name=\"reviewContent\" rows=\"8\" cols=\"40\"></textarea>\n");
      out.write("								<br>\n");
      out.write("\n");
      out.write("							</div>\n");
      out.write("							<div>\n");
      out.write("\n");
      out.write("								<input type=\"submit\" value=\"등록\">\n");
      out.write("\n");
      out.write("							</div>\n");
      out.write("						</form>\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div id=\"footer\">\n");
      out.write("					<h1>FriendsFit</h1>\n");
      out.write("					피트니스크루<br> 팀장 김대현: ysm691611@naver.com<br> 변지협 오주현 류혜림\n");
      out.write("					염다영<br> 인공지능사관학교<br> @all rights reserved+\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div id=\"main-navbar\" class=\"navbar\">\n");
      out.write("				<ul class=\"navbar-ul\">\n");
      out.write("					<li class=\"navbar-li1 navbar-li\"><img src=\"img/nav_home.svg\"\n");
      out.write("						alt=\"home icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\n");
      out.write("						onclick=\"location.href='index.jsp'\"> <br>홈</li>\n");
      out.write("					<li class=\"navbar-li2 navbar-li\"><img src=\"img/nav_map.svg\"\n");
      out.write("						alt=\"map icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\n");
      out.write("						onclick=\"location.href='map.jsp'\"> <br>지도</li>\n");
      out.write("					<li class=\"navbar-li3 navbar-li\"><img src=\"img/nav_commu.svg\"\n");
      out.write("						alt=\"community icon\" width=\"24\" height=\"24\"\n");
      out.write("						style=\"cursor: pointer\" onclick=\"location.href='community.jsp'\">\n");
      out.write("						<br>커뮤니티</li>\n");
      out.write("					<li class=\"navbar-li4 navbar-li\"><img src=\"img/nav_col.svg\"\n");
      out.write("						alt=\"column icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\n");
      out.write("						onclick=\"location.href='column.jsp'\"> <br>컬럼</li>\n");
      out.write("					<li class=\"navbar-li5 navbar-li\"><img src=\"img/nav_review.svg\"\n");
      out.write("						alt=\"review icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\n");
      out.write("						onclick=\"location.href='review.jsp'\"> <br>ocr리뷰</li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
