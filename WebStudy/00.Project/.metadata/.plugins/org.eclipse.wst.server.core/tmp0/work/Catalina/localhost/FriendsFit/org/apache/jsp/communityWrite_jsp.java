/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-08 09:07:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class communityWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>FriendsFit</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/slideStyle.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/communityWrite.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"whole\">\r\n");
      out.write("		<div id=\"mainframe\">\r\n");
      out.write("			<div id=\"main-content\">\r\n");
      out.write("				<div id=\"header\">\r\n");
      out.write("					<div class=\"top-header\">\r\n");
      out.write("						<img src=\"img/FFlogo.png\" alt=\"friendsfit-logo\"\r\n");
      out.write("							style=\"cursor: pointer\" onclick=\"location.href='index.jsp'\">\r\n");
      out.write("						<!-- <h1>Our fit</h1> -->\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"button-group\">\r\n");
      out.write("						<form action=\"login.html\">\r\n");
      out.write("							<button type=\"submit\" class=\"sign-in-button\"\r\n");
      out.write("								formaction=\"login.jsp\">로그인 / 가입</button>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<h2 class=\"page-title\">커뮤니티 글쓰기 페이지</h2>\r\n");
      out.write("				<br>\r\n");
      out.write("				<div class=\"divider\"></div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-container\">\r\n");
      out.write("					<form class=\"community-form\" action=\"communityAction\" method=\"post\"\r\n");
      out.write("						enctype=\"multipart/form-data\">\r\n");
      out.write("						<div class=\"category-selection\">\r\n");
      out.write("							<div class=\"category-label\">카테고리를 선택해주세요.\r\n");
      out.write("							<select class=\"category-select\" name=\"facilityCategory\">\r\n");
      out.write("								<option>헬스장</option>\r\n");
      out.write("								<option>수영</option>\r\n");
      out.write("								<option>자세교정</option>\r\n");
      out.write("								<option>크로스핏</option>\r\n");
      out.write("								<option>라켓스포츠</option>\r\n");
      out.write("								<option>클라이밍</option>\r\n");
      out.write("								<option>무도장</option>\r\n");
      out.write("								<option>골프</option>\r\n");
      out.write("								<option>기타시설</option>\r\n");
      out.write("							</select>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"title-input\">\r\n");
      out.write("							<input class=\"title-field\" placeholder=\"제목을 입력해 주세요.\" type=\"text\"\r\n");
      out.write("								name=\"commuTitle\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"file-input\">\r\n");
      out.write("							<input class=\"file-field\" type=\"file\" name=\"file\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"content-input\">\r\n");
      out.write("							<textarea class=\"content-field\" name=\"commuContent\" rows=\"30\"\r\n");
      out.write("								cols=\"57\"></textarea>\r\n");
      out.write("							<br>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"submit-button\">\r\n");
      out.write("							<input type=\"submit\" value=\"등록\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div id=\"footer\">\r\n");
      out.write("					<h1>FriendsFit</h1>\r\n");
      out.write("					피트니스크루<br> 팀장 김대현: ysm691611@naver.com<br> 변지협 오주현 류혜림\r\n");
      out.write("					염다영<br> 인공지능사관학교<br> @all rights reserved+\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div id=\"main-navbar\" class=\"navbar\">\r\n");
      out.write("				<ul class=\"navbar-ul\">\r\n");
      out.write("					<li class=\"navbar-li1 navbar-li\"><img src=\"img/nav_home.svg\"\r\n");
      out.write("						alt=\"home icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\r\n");
      out.write("						onclick=\"location.href='index.jsp'\"> <br>홈</li>\r\n");
      out.write("					<li class=\"navbar-li2 navbar-li\"><img src=\"img/nav_map.svg\"\r\n");
      out.write("						alt=\"map icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\r\n");
      out.write("						onclick=\"location.href='map.jsp'\"> <br>지도</li>\r\n");
      out.write("					<li class=\"navbar-li3 navbar-li\"><img src=\"img/nav_commu.svg\"\r\n");
      out.write("						alt=\"community icon\" width=\"24\" height=\"24\"\r\n");
      out.write("						style=\"cursor: pointer\" onclick=\"location.href='community.jsp'\">\r\n");
      out.write("						<br>커뮤니티</li>\r\n");
      out.write("					<li class=\"navbar-li4 navbar-li\"><img src=\"img/nav_col.svg\"\r\n");
      out.write("						alt=\"column icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\r\n");
      out.write("						onclick=\"location.href='column.jsp'\"> <br>컬럼</li>\r\n");
      out.write("					<li class=\"navbar-li5 navbar-li\"><img src=\"img/nav_review.svg\"\r\n");
      out.write("						alt=\"review icon\" width=\"24\" height=\"24\" style=\"cursor: pointer\"\r\n");
      out.write("						onclick=\"location.href='review.jsp'\"> <br>ocr리뷰</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
